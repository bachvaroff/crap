cc = wcc386
cflags = /d_USE_FASM_ /d_USE_BRANCH_
cdebug = /d_DEBUG_=0
include = /i=.
as = wasm
ld = wcl386
ldflags =
ldebug =
ar = wlib
lib = complex.lib
libh = cconfig.h complex.h cmatrix.h clu.h cfft.h fasm.h
libo = cmatrix.obj clu.obj cfft.obj fasm.obj
ldpostflags0 = $(lib)
soflags =
sodebug =
compile = $(cflags) $(cdebug) $(include)
link = $(ldflags) $(ldebug)
linkso = $(soflags) $(sodebug)

all : $(lib) mult.exe rot.exe ttrig.exe thyp.exe tinner.exe tlu.exe inv.exe tfft.exe

clean : .symbolic
	@del *.obj
	@del *.err
	@del *.bak
	@del *.exe
	@del *.map
	@del *.lib

.c.obj :
	$(cc) $(compile) $*.c

.asm.obj :
	$(as) $*.asm

cmatrix.obj : cmatrix.c $(libh)

clu.obj : clu.c $(libh)

cfft.obj : cfft.c $(libh)

$(lib) : $(libo)
	for %obj in ($<) do $(ar) $@ -+%obj

mult.obj : mult.c $(libh)

rot.obj : rot.c $(libh)

ttrig.obj : ttrig.c $(libh)

thyp.obj : thyp.c $(libh)

tinner.obj : tinner.c $(libh)

tlu.obj : tlu.c $(libh)

inv.obj : inv.c $(libh)

tfft.obj : tfft.c $(libh)

mult.exe : mult.obj $(lib)
	$(ld) $(link) /fe=$@ $*.obj $(ldpostflags0)

inv.exe : inv.obj $(lib)
	$(ld) $(link) /fe=$@ $*.obj $(ldpostflags0) 

rot.exe : rot.obj $(lib)
	$(ld) $(link) /fe=$@ $*.obj $(ldpostflags0)

ttrig.exe : ttrig.obj $(lib)
	$(ld) $(link) /fe=$@ $*.obj $(ldpostflags0)

thyp.exe : thyp.obj $(lib)
	$(ld) $(link) /fe=$@ $*.obj $(ldpostflags0)

tinner.exe : tinner.obj $(lib)
	$(ld) $(link) /fe=$@ $*.obj $(ldpostflags0)

tlu.exe : tlu.obj $(lib)
	$(ld) $(link) /fe=$@ $*.obj $(ldpostflags0)

tfft.exe : tfft.obj $(lib)
	$(ld) $(link) /fe=$@ $*.obj $(ldpostflags0)

